// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieProject.Models;

#nullable disable

namespace MovieProject.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20250908220930_genre")]
    partial class genre
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieProject.Models.Genre", b =>
                {
                    b.Property<string>("GenreId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = "A",
                            Name = "Action"
                        },
                        new
                        {
                            GenreId = "C",
                            Name = "Comedy"
                        },
                        new
                        {
                            GenreId = "D",
                            Name = "Drama"
                        },
                        new
                        {
                            GenreId = "H",
                            Name = "Horror"
                        },
                        new
                        {
                            GenreId = "SF",
                            Name = "Sci-Fi"
                        },
                        new
                        {
                            GenreId = "R",
                            Name = "Romance"
                        },
                        new
                        {
                            GenreId = "T",
                            Name = "Thriller"
                        },
                        new
                        {
                            GenreId = "F",
                            Name = "Fantasy"
                        });
                });

            modelBuilder.Entity("MovieProject.Models.MovieModel", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("GenreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("MovieId");

                    b.HasIndex("GenreId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            GenreId = "SF",
                            Name = "Inception",
                            Rating = 8,
                            Year = 2010
                        },
                        new
                        {
                            MovieId = 2,
                            GenreId = "A",
                            Name = "The Dark Knight",
                            Rating = 9,
                            Year = 2008
                        },
                        new
                        {
                            MovieId = 3,
                            GenreId = "T",
                            Name = "Pulp Fiction",
                            Rating = 7,
                            Year = 1994
                        },
                        new
                        {
                            MovieId = 4,
                            GenreId = "D",
                            Name = "The Shawshank Redemption",
                            Rating = 10,
                            Year = 1994
                        },
                        new
                        {
                            MovieId = 5,
                            GenreId = "D",
                            Name = "The Godfather",
                            Rating = 9,
                            Year = 1972
                        },
                        new
                        {
                            MovieId = 6,
                            GenreId = "SF",
                            Name = "The Matrix",
                            Rating = 8,
                            Year = 1999
                        },
                        new
                        {
                            MovieId = 7,
                            GenreId = "R",
                            Name = "Forrest Gump",
                            Rating = 8,
                            Year = 1994
                        },
                        new
                        {
                            MovieId = 8,
                            GenreId = "D",
                            Name = "Fight Club",
                            Rating = 7,
                            Year = 1999
                        },
                        new
                        {
                            MovieId = 9,
                            GenreId = "SF",
                            Name = "Interstellar",
                            Rating = 8,
                            Year = 2014
                        },
                        new
                        {
                            MovieId = 10,
                            GenreId = "F",
                            Name = "The Lord of the Rings: The Return of the King",
                            Rating = 9,
                            Year = 2003
                        },
                        new
                        {
                            MovieId = 11,
                            GenreId = "A",
                            Name = "The Avengers",
                            Rating = 7,
                            Year = 2012
                        },
                        new
                        {
                            MovieId = 12,
                            GenreId = "A",
                            Name = "Gladiator",
                            Rating = 8,
                            Year = 2000
                        },
                        new
                        {
                            MovieId = 13,
                            GenreId = "C",
                            Name = "SuperBabies: Baby Geniuses 2",
                            Rating = 1,
                            Year = 2004
                        },
                        new
                        {
                            MovieId = 14,
                            GenreId = "C",
                            Name = "Cats",
                            Rating = 2,
                            Year = 2019
                        },
                        new
                        {
                            MovieId = 15,
                            GenreId = "C",
                            Name = "Disaster Movie",
                            Rating = 1,
                            Year = 2008
                        });
                });

            modelBuilder.Entity("MovieProject.Models.MovieModel", b =>
                {
                    b.HasOne("MovieProject.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}

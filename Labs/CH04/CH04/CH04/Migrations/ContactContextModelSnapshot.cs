// <auto-generated />
using System;
using CH04.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CH04.Migrations
{
    [DbContext(typeof(ContactContext))]
    partial class ContactContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CH04.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Family"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Friend"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Work"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("CH04.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CategoryId = 1,
                            Created = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "DallyJ@gmail.com",
                            FirstName = "John",
                            LastName = "Dally",
                            Phone = "314-555-1234"
                        },
                        new
                        {
                            Id = -2,
                            CategoryId = 2,
                            Created = new DateTime(2023, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "SimoneSMITH@yahoo.com",
                            FirstName = "Simone",
                            LastName = "Smith",
                            Phone = "573-555-5678"
                        },
                        new
                        {
                            Id = -3,
                            CategoryId = 3,
                            Created = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "SSmith123@gmail.com",
                            FirstName = "Synday",
                            LastName = "Smith",
                            Phone = "636-595-8765"
                        },
                        new
                        {
                            Id = -4,
                            CategoryId = 4,
                            Created = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "TJones78@gmail.com",
                            FirstName = "Talia",
                            LastName = "Jones",
                            Phone = "314-891-5551"
                        },
                        new
                        {
                            Id = -5,
                            CategoryId = 3,
                            Created = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "TJ9876@gmail.com",
                            FirstName = "Thomas",
                            LastName = "Jones",
                            Phone = "314-891-4321"
                        },
                        new
                        {
                            Id = -6,
                            CategoryId = 1,
                            Created = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Brown.T_657@gmail.com",
                            FirstName = "Terrance",
                            LastName = "Brown",
                            Phone = "314-665-6789"
                        });
                });

            modelBuilder.Entity("CH04.Models.Contact", b =>
                {
                    b.HasOne("CH04.Models.Category", "Category")
                        .WithMany("Contacts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CH04.Models.Category", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
